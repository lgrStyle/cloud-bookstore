<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.bookstore.common.all.mapper.AuthorMapper">
  <resultMap id="BaseResultMap" type="io.bookstore.common.all.entity.Author">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="invite_code" jdbcType="VARCHAR" property="inviteCode" />
    <result column="pen_name" jdbcType="VARCHAR" property="penName" />
    <result column="tel_phone" jdbcType="VARCHAR" property="telPhone" />
    <result column="chat_account" jdbcType="VARCHAR" property="chatAccount" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="work_direction" jdbcType="TINYINT" property="workDirection" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, invite_code, pen_name, tel_phone, chat_account, email, work_direction, 
    status, create_time
  </sql>
  <select id="selectByExample" parameterType="io.bookstore.common.all.entity.AuthorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from author
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from author
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.bookstore.common.all.entity.AuthorExample">
    delete from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.bookstore.common.all.entity.Author">
    insert into author (id, user_id, invite_code, 
      pen_name, tel_phone, chat_account, 
      email, work_direction, status, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{inviteCode,jdbcType=VARCHAR}, 
      #{penName,jdbcType=VARCHAR}, #{telPhone,jdbcType=VARCHAR}, #{chatAccount,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{workDirection,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.bookstore.common.all.entity.Author">
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="inviteCode != null">
        invite_code,
      </if>
      <if test="penName != null">
        pen_name,
      </if>
      <if test="telPhone != null">
        tel_phone,
      </if>
      <if test="chatAccount != null">
        chat_account,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="workDirection != null">
        work_direction,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="inviteCode != null">
        #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="penName != null">
        #{penName,jdbcType=VARCHAR},
      </if>
      <if test="telPhone != null">
        #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="chatAccount != null">
        #{chatAccount,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="workDirection != null">
        #{workDirection,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.bookstore.common.all.entity.AuthorExample" resultType="java.lang.Long">
    select count(*) from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update author
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.inviteCode != null">
        invite_code = #{record.inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="record.penName != null">
        pen_name = #{record.penName,jdbcType=VARCHAR},
      </if>
      <if test="record.telPhone != null">
        tel_phone = #{record.telPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.chatAccount != null">
        chat_account = #{record.chatAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.workDirection != null">
        work_direction = #{record.workDirection,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update author
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      invite_code = #{record.inviteCode,jdbcType=VARCHAR},
      pen_name = #{record.penName,jdbcType=VARCHAR},
      tel_phone = #{record.telPhone,jdbcType=VARCHAR},
      chat_account = #{record.chatAccount,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      work_direction = #{record.workDirection,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.bookstore.common.all.entity.Author">
    update author
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="inviteCode != null">
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="penName != null">
        pen_name = #{penName,jdbcType=VARCHAR},
      </if>
      <if test="telPhone != null">
        tel_phone = #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="chatAccount != null">
        chat_account = #{chatAccount,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="workDirection != null">
        work_direction = #{workDirection,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.bookstore.common.all.entity.Author">
    update author
    set user_id = #{userId,jdbcType=BIGINT},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      pen_name = #{penName,jdbcType=VARCHAR},
      tel_phone = #{telPhone,jdbcType=VARCHAR},
      chat_account = #{chatAccount,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      work_direction = #{workDirection,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>