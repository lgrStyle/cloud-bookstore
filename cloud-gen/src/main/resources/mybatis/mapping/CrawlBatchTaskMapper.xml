<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.bookstore.all.mapper.CrawlBatchTaskMapper">
  <resultMap id="BaseResultMap" type="io.bookstore.all.entity.CrawlBatchTask">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="crawl_count_success" jdbcType="INTEGER" property="crawlCountSuccess" />
    <result column="crawl_count_target" jdbcType="INTEGER" property="crawlCountTarget" />
    <result column="task_status" jdbcType="TINYINT" property="taskStatus" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, source_id, crawl_count_success, crawl_count_target, task_status, start_time, 
    end_time
  </sql>
  <select id="selectByExample" parameterType="io.bookstore.all.entity.CrawlBatchTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crawl_batch_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crawl_batch_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from crawl_batch_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.bookstore.all.entity.CrawlBatchTaskExample">
    delete from crawl_batch_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.bookstore.all.entity.CrawlBatchTask">
    insert into crawl_batch_task (id, source_id, crawl_count_success, 
      crawl_count_target, task_status, start_time, 
      end_time)
    values (#{id,jdbcType=BIGINT}, #{sourceId,jdbcType=INTEGER}, #{crawlCountSuccess,jdbcType=INTEGER}, 
      #{crawlCountTarget,jdbcType=INTEGER}, #{taskStatus,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.bookstore.all.entity.CrawlBatchTask">
    insert into crawl_batch_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="crawlCountSuccess != null">
        crawl_count_success,
      </if>
      <if test="crawlCountTarget != null">
        crawl_count_target,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="crawlCountSuccess != null">
        #{crawlCountSuccess,jdbcType=INTEGER},
      </if>
      <if test="crawlCountTarget != null">
        #{crawlCountTarget,jdbcType=INTEGER},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.bookstore.all.entity.CrawlBatchTaskExample" resultType="java.lang.Long">
    select count(*) from crawl_batch_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update crawl_batch_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sourceId != null">
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.crawlCountSuccess != null">
        crawl_count_success = #{record.crawlCountSuccess,jdbcType=INTEGER},
      </if>
      <if test="record.crawlCountTarget != null">
        crawl_count_target = #{record.crawlCountTarget,jdbcType=INTEGER},
      </if>
      <if test="record.taskStatus != null">
        task_status = #{record.taskStatus,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update crawl_batch_task
    set id = #{record.id,jdbcType=BIGINT},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      crawl_count_success = #{record.crawlCountSuccess,jdbcType=INTEGER},
      crawl_count_target = #{record.crawlCountTarget,jdbcType=INTEGER},
      task_status = #{record.taskStatus,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.bookstore.all.entity.CrawlBatchTask">
    update crawl_batch_task
    <set>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="crawlCountSuccess != null">
        crawl_count_success = #{crawlCountSuccess,jdbcType=INTEGER},
      </if>
      <if test="crawlCountTarget != null">
        crawl_count_target = #{crawlCountTarget,jdbcType=INTEGER},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.bookstore.all.entity.CrawlBatchTask">
    update crawl_batch_task
    set source_id = #{sourceId,jdbcType=INTEGER},
      crawl_count_success = #{crawlCountSuccess,jdbcType=INTEGER},
      crawl_count_target = #{crawlCountTarget,jdbcType=INTEGER},
      task_status = #{taskStatus,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>