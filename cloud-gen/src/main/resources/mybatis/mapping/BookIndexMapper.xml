<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.bookstore.gen.all.mapper.BookIndexMapper">
  <resultMap id="BaseResultMap" type="io.bookstore.gen.all.entity.BookIndex">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="book_id" jdbcType="BIGINT" property="bookId" />
    <result column="index_num" jdbcType="INTEGER" property="indexNum" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="word_count" jdbcType="INTEGER" property="wordCount" />
    <result column="is_vip" jdbcType="TINYINT" property="isVip" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_id, index_num, index_name, word_count, is_vip, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="io.bookstore.gen.all.entity.BookIndexExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_index
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book_index
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.bookstore.gen.all.entity.BookIndexExample">
    delete from book_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.bookstore.gen.all.entity.BookIndex">
    insert into book_index (id, book_id, index_num, 
      index_name, word_count, is_vip, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, #{indexNum,jdbcType=INTEGER}, 
      #{indexName,jdbcType=VARCHAR}, #{wordCount,jdbcType=INTEGER}, #{isVip,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.bookstore.gen.all.entity.BookIndex">
    insert into book_index
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="indexNum != null">
        index_num,
      </if>
      <if test="indexName != null">
        index_name,
      </if>
      <if test="wordCount != null">
        word_count,
      </if>
      <if test="isVip != null">
        is_vip,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="indexNum != null">
        #{indexNum,jdbcType=INTEGER},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="wordCount != null">
        #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="isVip != null">
        #{isVip,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.bookstore.gen.all.entity.BookIndexExample" resultType="java.lang.Long">
    select count(*) from book_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_index
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=BIGINT},
      </if>
      <if test="record.indexNum != null">
        index_num = #{record.indexNum,jdbcType=INTEGER},
      </if>
      <if test="record.indexName != null">
        index_name = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.wordCount != null">
        word_count = #{record.wordCount,jdbcType=INTEGER},
      </if>
      <if test="record.isVip != null">
        is_vip = #{record.isVip,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_index
    set id = #{record.id,jdbcType=BIGINT},
      book_id = #{record.bookId,jdbcType=BIGINT},
      index_num = #{record.indexNum,jdbcType=INTEGER},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      word_count = #{record.wordCount,jdbcType=INTEGER},
      is_vip = #{record.isVip,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.bookstore.gen.all.entity.BookIndex">
    update book_index
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=BIGINT},
      </if>
      <if test="indexNum != null">
        index_num = #{indexNum,jdbcType=INTEGER},
      </if>
      <if test="indexName != null">
        index_name = #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="wordCount != null">
        word_count = #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="isVip != null">
        is_vip = #{isVip,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.bookstore.gen.all.entity.BookIndex">
    update book_index
    set book_id = #{bookId,jdbcType=BIGINT},
      index_num = #{indexNum,jdbcType=INTEGER},
      index_name = #{indexName,jdbcType=VARCHAR},
      word_count = #{wordCount,jdbcType=INTEGER},
      is_vip = #{isVip,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>